local transf = require 'transf'
local vec3 = require 'vec3'
-- local vec4 = require 'vec4'
local modulesutil = require 'modulesutil'
local arrayUtils = require('lollo_elevated_stations.arrayUtils')
local trainstationutil = require 'modules/elevated_trainstationutil'
local lolloConstants = require('lollo_elevated_stations/lolloConstants')

function data()
    return {
        availability = {
            yearFrom = lolloConstants().availableFrom -- was 0
            --yearTo = -1 -- no!
        },
        cost = {
            price = 2000
        },
        description = {
            name = _('Elevated station'),
            description = _('Elevated station for passengers, with street access.'),
            --icon = 'ui/construction/station/rail/modular_station/stairs.tga'
            icon = 'ui/elevated_stairs.tga'
        },
        category = {
            categories = {'elevated passenger buildings'}
        },
        metadata = {
            -- era = 1,
            -- level = 1,
            span = {1, 2},
            stock_station = false -- LOLLO NOTE use this to override the default station handling
        },
        type = 'elevated_rail_stairs',
        order = {
            value = 700
        },
        updateFn = function(result, transform, tag, slotId, addModuleFn, params)
            local _zed = trainstationutil.getZed(params)
            local _stationTransf = transf.rotZTransl(math.rad(90), vec3.new(0, 0, _zed))
            local _clockY = 5.3

            if _zed == 0 then
                addModuleFn('elevated_stairs_0.mdl', _stationTransf)
            elseif _zed == 5 then
                addModuleFn('elevated_stairs_5.mdl', _stationTransf)
            elseif _zed == 10 then
                addModuleFn('elevated_stairs_10.mdl', _stationTransf)
                local _clockTransf = transf.rotZTransl(math.rad(90), vec3.new(_clockY, 0, _zed - 3))
                addModuleFn('station/rail/asset/era_c_big_clock.mdl', _clockTransf)
            elseif _zed == 15 then
                addModuleFn('elevated_stairs_15.mdl', _stationTransf)
                local _clockTransf = transf.rotZTransl(math.rad(90), vec3.new(_clockY, 0, _zed - 5))
                addModuleFn('station/rail/asset/era_c_big_clock.mdl', _clockTransf)
            elseif _zed == 20 then
                addModuleFn('elevated_stairs_20.mdl', _stationTransf)
                local _clockTransf = transf.rotZTransl(math.rad(90), vec3.new(_clockY, 0, _zed - 5))
                addModuleFn('station/rail/asset/era_c_big_clock.mdl', _clockTransf)
            elseif _zed == 25 then
                addModuleFn('elevated_stairs_25.mdl', _stationTransf)
                local _clockTransf = transf.rotZTransl(math.rad(90), vec3.new(_clockY, 0, _zed - 5))
                addModuleFn('station/rail/asset/era_c_big_clock.mdl', _clockTransf)
            else
                -- addModuleFn('elevated_stairs.mdl', stationTransf)
                return
            end

            local _isHeadStation = arrayUtils.arrayHasValue(result.elevatedHeadStations, slotId)
            if _isHeadStation then
                addModuleFn(
                    'behind_head_station.mdl',
                    transf.rotZTransl(math.rad(90), vec3.new(-1, 0, 0))
                )
            end

            local faces = _isHeadStation and {
                {5.0, -5.8, 0.0, 1.0},
                {5.0, 5.8, 0.0, 1.0},
                {-2.5, 5.8, 0.0, 1.0},
                {-2.5, -5.8, 0.0, 1.0}
            } or {
                {5.0, -5.8, 0.0, 1.0},
                {5.0, 5.8, 0.0, 1.0},
                {-1.0, 5.8, 0.0, 1.0},
                {-1.0, -5.8, 0.0, 1.0}
            }
            modulesutil.TransformFaces(transform, faces)
            local faces2 = {
                type = 'EQUAL',
                faces = {faces},
                --slopeHigh = 999, --LOLLO added this
                --slopeLow = 0 --LOLLO added this
            }
            table.insert(result.terrainAlignmentLists, faces2)
            -- LOLLO NOTE insert colliders here, coz those in the model do not pull.
            -- These values are calculated with trial and error. They are slightly larger than half of the bounding box sizes, which are cut a tad smaller.
            table.insert(
                result.colliders,
                {
                    type = 'BOX',
                    transf = transf.mul(transform, transf.transl(vec3.new(0, 0, _zed * .5 + 5))), --transform,
                    params = {
                        halfExtents = {5.8, 6.7, _zed * .5 + 5}
                    }
                }
            )

            table.insert(
                result.groundFaces,
                {
                    face = faces,
                    modes = {
                        {
                            type = 'FILL',
                            key = 'shared/asphalt_01.gtex.lua' --'shared/asphalt_01.gtex.lua'
                        },
                        --[[                         {
                            type = 'STROKE_INNER',
                            key = 'shared/asphalt_01.gtex.lua',
                        },
                        ]]
                        {
                            type = 'STROKE_OUTER',
                            key = 'shared/asphalt_01.gtex.lua' --'street_border.lua'
                        }
                    }
                }
            )
        end,
        getModelsFn = function()
            --print('LOLLO getModelsFn called')
            --print('traceback = ', debug.traceback())
            local result = {
                {
                    id = 'elevated_stairs_20.mdl', --'station/rail/era_a/stairs.mdl',
                    transf = transf.rotZTransl(math.rad(90), vec3.new(0, 0, 0))
                }
            }

            return result
        end
    }
end
