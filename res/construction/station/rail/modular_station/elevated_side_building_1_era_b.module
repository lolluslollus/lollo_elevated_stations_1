local transf = require "transf"
local vec3 = require "vec3"
local modulesutil = require "modulesutil"
local constructionutil = require "constructionutil"
local trainstationutil = require "modules/elevated_trainstationutil"
local lolloConstants = require("lolloConstants")

--Begin Generated
local generatedData = {
	["era_b_station_1_assets_1"] = {
		models = {
			-- ["station/rail/asset/era_b_double_chair.mdl"] = {
				-- { 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, -26.00000, 0.00000, 1.00000 },
			-- },
			["station/rail/asset/era_b_trashcan.mdl"] = {
				--{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -2.00000, -26.00000, 0.00000, 1.00000 },
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 4.50000, -15.50000, 0.00000, 1.00000 },
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -4.50000, -15.50000, 0.00000, 1.00000 },
			},
			-- ["street/street_light_us_a.mdl"] = {
				-- { 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -4.00000, -26.00000, 0.00000, 1.00000 },
				-- { 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 4.00000, -26.00000, 0.00000, 1.00000 },
			-- },
		},
	},
}
--End Generated

function data()

return { 
	cost = {
		price = 5000,
	},
	category = {
		categories = { "elevated passenger buildings", },
	},
	description = {
		name = _("Small side building"),
		description = _("Decorative.\nSmall side building for passenger stations."),
		icon = "ui/construction/station/rail/modular_station/side_building_1_era_b.tga",
	}, 
	availability = {
		yearFrom = lolloConstants().availableFrom, -- was 1920
		yearTo = 1980
	},
	type = "rail_side_building_size1",
	order = {
		value = 831,
	},
	metadata = {
		era = 1,
		level =1,
		span = {2, 2}
	},
	
	updateFn = function(result, transform, tag, slotId, addModuleFn, params)
		local config = {
			extend = { 6, -6, 0, -17, 4, 0 },
			main = "station/rail/era_b/station_1.mdl",
			con_left = {"station/rail/era_b/station_1_con_l_1.mdl","station/rail/era_b/station_1_con_l_2.mdl","station/rail/era_b/station_1_con_l_1.mdl",},
			con_right = {"station/rail/era_b/station_1_con_r_1.mdl","station/rail/era_b/station_1_con_r_2.mdl","station/rail/era_b/station_1_con_r_1.mdl",},
			end_left = "station/rail/era_b/station_1_end_l.mdl",
			end_right = "station/rail/era_b/station_1_end_r.mdl",
			slotIdOffset = 5,
			translationY = 0,
		}
	
	
		local tran = trainstationutil.MakeMainBuildingModule(result, transform, tag, slotId, addModuleFn, params, config)
		constructionutil.addModels(generatedData["era_b_station_1_assets_1"], result.models, tran, tag)
		constructionutil.addModels(
            {
                models = {
                    ['lift_size_1_side.mdl'] = {
                        {1.0000, 0.00000, 0.00000, 0.00000, 0.00000, 1.0000, 0.00000, 0.00000, 0.00000, 0.00000, 1.0000, 0.00000, 0.00000, -0.000, 0.000, 1.00000}
                    }
                }
            },
            result.models,
            tran,
            tag
        )
	end,
	
	getModelsFn = function()
		
		local result = {
			{ 
				id = "station/rail/era_b/station_1.mdl",
				transf = transf.rotZTransl(math.rad(-90), vec3.new(15,0,0)),
			},
			{ 
				id = "station/rail/era_b/station_1_end_l.mdl",
				transf = transf.rotZTransl(math.rad(-90), vec3.new(15,0,0)),
			},
			{ 
				id = "station/rail/era_b/station_1_end_r.mdl",
				transf = transf.rotZTransl(math.rad(-90), vec3.new(15,0,0)),
			},
		}
		
		return result
	end
}

end
