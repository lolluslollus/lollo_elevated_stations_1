local transf = require 'transf'
local vec3 = require 'vec3'
local modulesutil = require 'modulesutil'
local constructionutil = require 'constructionutil'
local moduleHelpers = require('lollo_elevated_stations.moduleHelpers')

--Begin Generated
local generatedData = {
    ['era_c'] = {
        models = {
            ['station/rail/asset/era_c_perron_number.mdl'] = {
                {1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 3.40000, 1.00000}
            }
        }
    },
    ['era_c_name'] = {
        models = {
            ['station/rail/asset/era_c_station_name.mdl'] = {
                {1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 10.00000, 0.00000, 2.20000, 1.00000},
                {1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.99996, 0.00873, 0.00000, 0.00000, -0.00873, 0.99996, 0.00000, 30.00000, 0.00000, 2.20000, 1.00000}
            }
        }
    },
    ['era_c_perron_underpass_assets'] = {
        models = {
            ['station/rail/asset/era_c_double_chair.mdl'] = {
                {0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 3.00000, 0.00000, 0.80000, 1.00000},
                {0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 33.00000, 0.00000, 0.80000, 1.00000},
                {0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 7.00000, 0.00000, 0.80000, 1.00000},
                {0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 37.00000, 0.00000, 0.80000, 1.00000}
            },
            ['station/rail/asset/era_c_perron_holder.mdl'] = {
                {1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 20.00000, 0.00000, 3.40000, 1.00000}
            },
            ['station/rail/asset/era_c_perron_number.mdl'] = {
                {1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 3.40000, 1.00000}
            },
            ['station/rail/asset/era_c_perron_pillar.mdl'] = {
                {1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 10.00000, 0.00000, 0.79000, 1.00000},
                {1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 30.00000, 0.00000, 0.79000, 1.00000},
                {1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 20.00000, 0.00000, 0.79000, 1.00000},
                {1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.79000, 1.00000}
            },
            ['station/rail/asset/era_c_small_clock.mdl'] = {
                {0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 19.76500, -1.16000, 3.40000, 1.00000},
                {0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 19.76500, 1.16000, 3.40000, 1.00000}
            },
            ['station/rail/asset/era_c_trashcan.mdl'] = {
                {0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 5.00000, 0.00000, 0.80000, 1.00000},
                {0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 35.00000, 0.00000, 0.80000, 1.00000},
                {1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 17.43000, 0.00000, 0.80000, 1.00000}
            },
            ['asset/arrivi.mdl'] = {
                {-1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 19.00000, 0.00000, 0.80000, 1.00000},
            },
            ['asset/partenze.mdl'] = {
                {-1.00000, 0.00000, 0.00000, 0.00000, -0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 21.00000, 0.00000, 0.80000, 1.00000},
            }
        }
    }
}
--End Generated

function data()
    local function GetModelsConfig()
        return {
            --perron = "station/rail/era_c/perron_5_underpass.mdl",
            perron = 'era_c/perron_5_underpass_no_stripes.mdl',
            perron2Track = 'era_c/perron_5_side.mdl',
            --endPerron = "station/rail/era_c/perron_5_end.mdl",
            endPerron = 'era_c/perron_5_end.mdl',
            endPerronSmall = 'era_c/perron_1_end.mdl',
            perronRoof = 'station/rail/era_c/perron_5_roof.mdl',
            endPerronRoof = 'station/rail/era_c/perron_5_roof_end.mdl',
            era = 2
        }
    end

    return {
        availability = {
            yearFrom = 1980
        },
        cost = {
            price = 0
        },
        category = {
            categories = {'elevated platforms'}
        },
        description = {
            name = _('Passenger underpass'),
            description = _('Elevated underpass for passenger platforms.'),
            icon = 'ui/construction/station/rail/modular_station/platform_passenger_stairs_era_c.tga'
        },
        type = 'passenger_platform_addon',
        order = {
            value = 711
        },
        -- buildMode = "MULTI",
        metadata = {
            platform = true,
            passenger_platform = true,
            underground = true
        },
        updateFn = function(result, transform, tag, slotId, addModelFn)
            --LOLLO commented out this
            --[[
			local hole = {
				{1.6,  -10.0, 0.0, 1.0},
				{1.6,  10.0,  0.0, 1.0},
				{-1.6, 10.0,  0.0, 1.0},
				{-1.6, -10.0, 0.0, 1.0},
			}
			modulesutil.TransformFaces(transform, hole)
			table.insert(result.groundFaces, {
				face = hole,
				modes = {
					{
						type = "FILL",
						key = "hole.lua"
					}
				}
			})
			]]
            result.models[#result.models + 1] = {
                --id = "station/rail/era_a/tn_underground_connection.mdl",
                id = 'tn_underground_connection_no_top.mdl',
                transf = transf.mul(transform, transf.transl(vec3.new(0, 0, -2))),
                tag = tag
            }

            local coords = result.GetCoord(slotId)
            local i = coords[1]
            local j = coords[2]
            local modelsConfig = GetModelsConfig()
            addModelFn(modelsConfig.perron, transf.rotZTransl(math.rad(90), vec3.new(0, -20, -2)), 'perron' .. i .. '_' .. j)
            --addModelFn(modelsConfig.perronRoof, transf.rotZTransl(math.rad(90), vec3.new(0, -20, 0)))

            local tran = transf.mul(transform, transf.rotZTransl(math.rad(90), vec3.new(0, -20, -2)))

            local num1 = #result.models
            result.addPlatformCallback(
                i,
                j,
                function(left, n, station)
                    local ns = tostring(n)
                    if result.labelText[num1] == nil then
                        result.labelText[num1] = {'', '', '', ''}
                    end
                    if left then
                        result.labelText[num1][3] = ns
                        result.labelText[num1][4] = ns
                    else
                        result.labelText[num1][1] = ns
                        result.labelText[num1][2] = ns
                    end
                    local stationS = tostring(station)
                    result.labelText[num1 + 1] = {stationS, stationS}
                    result.labelText[num1 + 2] = {stationS, stationS}
                end
            )
            constructionutil.addModels(generatedData['era_c'], result.models, tran, tag)
            constructionutil.addModels(generatedData['era_c_name'], result.models, tran, tag)
            constructionutil.addModels(generatedData['era_c_perron_underpass_assets'], result.models, tran, tag)

            local ca = moduleHelpers.isWestPlatformNeighbourThere(result, i, j)
            if not ca then
                addModelFn(modelsConfig.endPerron, transf.rotZTransl(math.rad(-90), vec3.new(0, -20, -1.98)))
            --addModelFn(modelsConfig.endPerronRoof, transf.rotZTransl(math.rad(-90), vec3.new(0, -20, 0)))
            end
            local cb = moduleHelpers.isEastPlatformNeighbourThere(result, i, j)
            if not cb then
                addModelFn(modelsConfig.endPerron, transf.rotZTransl(math.rad(90), vec3.new(0, 20, -1.98)))
            --addModelFn(modelsConfig.endPerronRoof, transf.rotZTransl(math.rad(90), vec3.new(0, 20, 0)))
            end
            -- add bit between platform and track, if track is present
            moduleHelpers.addBitsBetweenPlatformAndTrack(result, i, j, addModelFn, modelsConfig, ca, cb, -2)
        end,
        getModelsFn = function()
            local modelsConfig = GetModelsConfig()

            local result = {
                {
                    id = modelsConfig.perron,
                    transf = transf.rotZTransl(math.rad(90), vec3.new(0, -20, 0))
                },
                {
                    id = modelsConfig.endPerron,
                    transf = transf.rotZTransl(math.rad(-90), vec3.new(0, -20, 0))
                },
                {
                    id = modelsConfig.endPerron,
                    transf = transf.rotZTransl(math.rad(90), vec3.new(0, 20, 0))
                }
                -- {
                -- id = modelsConfig.perronRoof,
                -- transf = transf.rotZTransl(math.rad(90), vec3.new(0,-20,0)),
                -- },
                -- {
                -- id = modelsConfig.endPerronRoof,
                -- transf = transf.rotZTransl(math.rad(-90), vec3.new(0,-20,0)),
                -- },
                -- {
                -- id = modelsConfig.endPerronRoof,
                -- transf = transf.rotZTransl(math.rad(90), vec3.new(0,20,0)),
                -- },
            }

            return result
        end
    }
end
