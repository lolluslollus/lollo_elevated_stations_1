local transf = require 'transf'
local vec3 = require 'vec3'
-- local vec4 = require 'vec4'
local modulesutil = require 'modulesutil'
local trainstationutil = require 'modules/elevated_trainstationutil'
local lolloConstants = require('lollo_elevated_stations/lolloConstants')

function data()
    return {
        availability = {
            yearFrom = lolloConstants().availableFrom -- was 0
            --yearTo = -1 -- no!
        },
        cost = {
            price = 2000
        },
        description = {
            name = _('Platform Lifts'),
            description = _('Platform lifts for passengers, with street access. They do not protrude on the side.'),
            icon = 'ui/platform_lifts.tga'
        },
        category = {
            categories = {'elevated passenger buildings'}
        },
        metadata = {
            -- era = 1,
            -- level = 1,
            span = {1, 2},
            stock_station = false -- LOLLO NOTE use this to override the default station handling
        },
        -- type = 'elevated_rail_stairs',
        type = 'platform_lifts',
        order = {
            value = 701
        },
        updateFn = function(result, transform, tag, slotId, addModuleFn, params)
            local zed = trainstationutil.getZed(params)
            local transf1 = transf.rotZTransl(math.rad(-90), vec3.new(2.8, 0, zed))
            -- print('zed =', zed or 'NIL')
            if zed == 0 then
                return -- no platform lifts at 0 height
            elseif zed == 5 then
                addModuleFn('platform_lifts_5.mdl', transf1)
            elseif zed == 10 then
                addModuleFn('platform_lifts_10.mdl', transf1)
            elseif zed == 15 then
                addModuleFn('platform_lifts_15.mdl', transf1)
            elseif zed == 20 then
                addModuleFn('platform_lifts_20.mdl', transf1)
            elseif zed == 25 then
                addModuleFn('platform_lifts_25.mdl', transf1)
            else
                return -- no platform lifts at other heights
            end

            local faces = {
                -- LOLLO NOTE first comes y, then x. Remember I am transforming with transf1 above.
                {4.7, -5.8, 0.0, 1.0},
                {4.7, 5.8, 0.0, 1.0},
                {0.1, 5.8, 0.0, 1.0},
                {0.1, -5.8, 0.0, 1.0}
            }
            modulesutil.TransformFaces(transform, faces)
            local faces2 = {
                type = 'EQUAL',
                faces = {faces},
                --slopeHigh = 999, --LOLLO added this
                --slopeLow = 0 --LOLLO added this
            }
            table.insert(result.terrainAlignmentLists, faces2)
            -- LOLLO NOTE insert colliders here, coz those in the model do not pull.
            -- These values are calculated with trial and error. They are slightly larger than half of the bounding box sizes, which are cut a tad smaller.
            table.insert(
                result.colliders,
                {
                    type = 'BOX',
                    -- transf = transf.mul(transform, transf.transl(vec3.new(0, 0, zed * .5 + 3))),
                    transf = transf.mul(transform, transf.rotZTransl(math.rad(-90), vec3.new(2.8, 0, zed * .5 + 3))),
                    params = {
                        halfExtents = {5.8, 2.3, zed * .5 + 3}
                    }
                }
            )

            table.insert(
                result.groundFaces,
                {
                    face = faces,
                    modes = {
                        {
                            type = 'FILL',
                            key = 'shared/asphalt_01.gtex.lua' --'shared/asphalt_01.gtex.lua'
                        },
                        --[[                         {
                            type = 'STROKE_INNER',
                            key = 'shared/asphalt_01.gtex.lua',
                        },
                        ]]
                        {
                            type = 'STROKE_OUTER',
                            key = 'shared/asphalt_01.gtex.lua' --'street_border.lua'
                        }
                    }
                }
            )
        end,
        getModelsFn = function()
            --this is for previewing while configuring, it uses a transf simil√∂ar to transf1 above
            local result = {
                {
                    id = 'platform_lifts_20.mdl', --'station/rail/era_a/stairs.mdl',
                    transf = transf.rotZTransl(math.rad(-90), vec3.new(2.8, 0, 0))
                }
            }

            return result
        end
    }
end
